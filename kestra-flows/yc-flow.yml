id: yc-flow
namespace: zoomcamp

inputs:
  - id: taxi
    type: SELECT
    displayName: Select taxi type
    values: ["yellow", "green"]
    defaults: "yellow"

variables:
  file: "{{ inputs.taxi }}_tripdata_{{ trigger.date | date ('yyyy-MM')}}.parquet"
  data: "{{ outputs.extract.outputFiles[inputs.taxi ~ '_tripdata_' ~ (trigger.date | date ('yyyy-MM')) ~ '.parquet'] }}"
tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{render(vars.file)}}"
      taxi: "{{inputs.taxi}}"

  - id: extract
    type: io.kestra.plugin.scripts.shell.Commands
    outputFiles:
      - "*.parquet"
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    commands:
      - wget -q https://d37ci6vzurychx.cloudfront.net/trip-data/{{ inputs.taxi }}_tripdata_{{ trigger.date | date ('yyyy-MM')}}.parquet

  - id: upload-file-to-yandex
    type: io.kestra.plugin.scripts.python.Script
    beforeCommands:
      - pip install boto3==1.35.99
    script: |
      import os
      import boto3
      from botocore.exceptions import NoCredentialsError
      from boto3.session import Config

      # Configuration
      bucket_name = "{{ kv('YANDEX_BUCKET_NAME') }}"
      file_path = "{{ render(vars.data) }}"
      object_name = "{{ inputs.taxi }}/{{ render(vars.file) }}"

      if not os.path.exists(file_path):
        print(f"Error: File '{file_path}' does not exist.")

      # Yandex Cloud S3 credentials
      aws_access_key_id = "{{ kv('AWS_ACCESS_KEY_ID') }}"
      aws_secret_access_key = "{{ kv('AWS_SECRET_ACCESS_KEY') }}"
      endpoint_url = 'https://storage.yandexcloud.net'

      # Initialize the S3 client
      session = boto3.session.Session()

      session = boto3.Session(
          aws_access_key_id=aws_access_key_id,
          aws_secret_access_key=aws_secret_access_key,
          region_name="ru-central1"
      )

      s3 = session.client(
          "s3", endpoint_url=endpoint_url
      )

      # Upload function
      def upload_to_yandex(file_path, bucket_name, object_name):
          try:
              s3.upload_file(file_path, bucket_name, object_name)
              print(f"File '{file_path}' uploaded to '{bucket_name}/{object_name}' successfully.")
          except FileNotFoundError:
              print("The file was not found.")
          except NoCredentialsError:
              print("Credentials are not available.")
          except Exception as e:
              print(f"An error occurred: {e}")

      # Upload the file
      upload_to_yandex(file_path, bucket_name, object_name)
    description: "Upload file to Yandex Cloud Object Storage"

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: This will remove output files. If you'd like to explore Kestra outputs, disable it.

triggers:
  - id: taxi_flow_schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 10 1 * *"